name: CD

  #Controls when the workflow will run
on:
  #Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - main
  workflow_dispatch:
  #Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

  #A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #This workflow contains a single jo
  deploy-to-digital-ocean-droplet:
          # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Deploy Application

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v2

      # pulls latest
    - name: Pull from GitHub
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        script: cd ~/fast-api-ocean && git pull 

      # build docker container
    - name: Docker Build
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        script: cd ~/fast-api-ocean && docker rm fast-api-ocean_visualizations_api -f && docker build --platform linux/amd64 --no-cache -t fast-api-ocean_visualizations_api .

      # run docker container
    - name: Docker Build
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        script: cd ~/fast-api-ocean && docker run --restart=always --publish 3000:8000 --name=fast-api-ocean_visualizations_api -d fast-api-ocean_visualizations_api
